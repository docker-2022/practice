
# source1: php, apache, folder, access, port - https://medium.com/@chandrajeetmaurya/docker-compose-setting-up-web-development-stack-step-by-step-81e557a69863
# source2: mysql - https://medium.com/@chandrajeetmaurya/docker-compose-setting-up-web-development-stack-step-by-step-part-2-mysql-298b13c6483e
# source3: mariadb - https://hub.docker.com/_/mariadb
# source4: https://medium.com/@chandrajeetmaurya/docker-compose-setting-up-web-development-stack-step-by-step-part-3-phpmyadmin-23c6d67768b7
version: "3.7"
services:
    php: #service name
      build: ./php #image we want to use
      ports:
        - 8090:80 #<-- to visit this site once up and running 127.0.0.1:8090 but it says  (You donâ€™t have permission to access this resource. Apache/2.4.38 (Debian) Server at 127.0.0.1 Port 8090) but atleast we can now access with port
      volumes:
        - ./www/app:/var/www/html # <----/var/www/html is in apache and my folder ./www/app folder is pointed to apache /var/www/html (so it's overriding the apache content

    db: #<--- after adding new container and services you must run docker-compose up -d to recreated (I used mariadb because mysql is having issue in my version I don't know why is that happening.) The issue was about  -- too many symbolic links
        image: mariadb
        restart: always
        environment:
             MYSQL_ROOT_PASSWORD: root
             MYSQL_USER: myusername
             MYSQL_PASSWORD: mypassword
             MYSQL_DATABASE: mydatabase

    pma:
        image: phpmyadmin/phpmyadmin
        ports:
          - 8080:80 #<-- without link below, we can access the phpmyadmin host:port -> http://127.0.0.1:8080/ but can't login, and if added with link then we can now login to root/root. Just make sure to run docker-compose up -d when you have changes to your docker-compose.yml.yml file
        links:
              - mysql:db #<---  links: <service-name>:<alias-name> this will allow us to login in phpmyadmin with the username and password for root/root